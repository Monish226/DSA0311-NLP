class EarleyParser:
    def __init__(self, grammar):
        self.grammar = grammar

    def parse(self, input_string):
        # Initialize the chart with a set of states
        chart = [set() for _ in range(len(input_string) + 1)]
        self.predict(0, 'S', chart)

        # Scan through the input string
        for i in range(len(input_string) + 1):
            self.scan(i, input_string, chart)

            # Complete step
            for state in chart[i]:
                self.complete(state, i, chart)

        # Check if the final state is in the last position of the chart
        final_state = ('S', ('NP', 'VP'), 0, 0)
        if final_state in chart[len(input_string)]:
            print("Parsing successful!")
        else:
            print("Parsing failed!")

    def predict(self, position, non_terminal, chart):
        for production in self.grammar.get(non_terminal, []):
            chart[position].add((non_terminal, production, 0, position))

    def scan(self, position, input_string, chart):
        if position < len(input_string):
            for state in chart[position]:
                _, production, dot, start_position = state
                if dot < len(production) and production[dot] == input_string[position]:
                    chart[position + 1].add((production[dot], production, dot + 1, start_position))

    def complete(self, state, position, chart):
        non_terminal, production, dot, start_position = state
        if dot == len(production):
            for st in chart[start_position]:
                _, prod, d, sp = st
                if d < len(prod) and prod[d] == non_terminal:
                    chart[position].add((prod[d], prod, d + 1, sp))


# Example usage:
# Define a context-free grammar
grammar_rules = {
    'S': [['NP', 'VP']],
    'NP': [['Det', 'N'], ['Det', 'N', 'PP']],
    'VP': [['V', 'NP'], ['V', 'NP', 'PP']],
    'PP': [['P', 'NP']],
    'Det': ['the', 'a'],
    'N': ['dog', 'cat', 'man', 'woman'],
    'V': ['chased', 'caught', 'bit', 'kissed'],
    'P': ['in', 'on', 'by', 'with']
}

# Create an Earley parser object
earley_parser = EarleyParser(grammar_rules)

# Parse a sentence
sentence = "the dog chased the cat"
earley_parser.parse(sentence)
