import nltk
from nltk import CFG

# Define a probabilistic CFG
pcfg_rules = """
    S -> NP VP [1.0]
    NP -> Det N [0.8] | Det N PP [0.2]
    VP -> V NP [0.9] | VP PP [0.1]
    PP -> P NP [1.0]
    Det -> 'the' [0.5] | 'a' [0.5]
    N -> 'dog' [0.3] | 'cat' [0.3] | 'man' [0.2] | 'woman' [0.2]
    V -> 'chased' [0.4] | 'caught' [0.4] | 'bit' [0.1] | 'kissed' [0.1]
    P -> 'in' [0.25] | 'on' [0.25] | 'by' [0.25] | 'with' [0.25]
"""

probabilistic_cfg = CFG.fromstring(pcfg_rules)
parser = nltk.ViterbiParser(probabilistic_cfg)

sentence = "the dog chased the cat"
for tree in parser.parse(sentence.split()):
    tree.pretty_print()
